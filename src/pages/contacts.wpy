<template>
  <view class="container">
    <view class="zan-panel">
      <repeat for="{{tasks}}" key="index" index="index" item="item">
        <view class="zan-cell"> 
          <!-- <image class="zan-cell__icon avatar" src="{{item.avatarUrl}}"></image> -->
          <view class="zan-cell__bd" @tap="tap">{{item.name}}</view>
          <view class="zan-cell__ft">{{getUrl(item._id)}}</view>
        </view>
      </repeat>            
    </view>      
  </view>
</template>

<style lang="less" scoped>
.container {
  margin: 10px 0 20px 0;
  .zan-panel {
    margin-top: 0;
    .avatar{
      width: 35px;
      height: 35px;
      border-radius: 5px;
      margin: 8px 0;
      margin-right:10px;
    }
  }
  .sep {
    color: #7e7d83;
    font-size: 13px;
    margin: 5px;
    padding-left: 10px;
  }
}
</style>

<script>
import wepy from 'wepy'
import req from '@/network'
import groupBy from 'lodash/groupBy'
import * as interceptor from '@/network/interceptor'
import { getRemoteAvatar } from '@/utils'

export default class Contacts extends wepy.page {
  config = {
    navigationBarTitleText: 'Contacts'
  }

  data = {
    contacts: null,
    tasks: null,
    total: 0
  }

  methods = {
    tap () {
      console.log('tap............')
    }
  }

  events = {}

  onLoad() {
    this.getContacts()
    req.baseUrl().interceptor(interceptor.request, interceptor.response)
    this.getTasks()
  }

  getContacts() {
    req.get('/contacts.json').then(res => {
      const contacts = res.data
      contacts.forEach(contact => {
        contact.avatarUrl = getRemoteAvatar(contact.avatar)
      })
      this.contacts = groupBy(contacts, 'header')
      this.total = contacts.length
      this.$apply()
    })
  }

  getTasks() {
    console.log('getTasks.....')
    const url = 'http://127.0.0.1:5000/creator/api/odata/v4/Af8eM6mAHo7wMDqD3/tasks?$top=20&$select=name,assignees,due_date,state,related_to,owner&$expand=assignees($select=name),related_to($select=name),owner($select=name)&$filter=_id+ne+-1&$count=true'
    const data = {}
    const header = {
      'X-User-Id': 'hPgDcEd9vKQxwndQR',
      'X-Auth-Token': 'mccrInVh91NBOItljoN9WruHTg355SEVRGh2g20lJFK',
      'X-Space-Id': 'Af8eM6mAHo7wMDqD3'
    }
    req.get(url, data, header).then(res => {
      this.tasks = res.value
      this.$apply()
      console.log(res.value)
    })
  }
}
</script>
